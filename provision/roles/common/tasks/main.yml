---
- name: install add-apt-repository binary for Ansible to work
  apt: name=python-software-properties update_cache=yes cache_valid_time=3600

- name: install dependencies
  action: apt pkg={{ item }} state=present
  with_items:
    - git-core
    - gcc
    - g++
    - patch
    - make
    - autoconf
    - automake
    - build-essential
    - libtool
    - python-dev
    - python-pip
    - python-virtualenv
    - zlib1g-dev
    - htop
    - zip
    - unzip
    - redis-server
    - nginx

- lineinfile: dest=/etc/sysctl.conf line="vm.overcommit_memory = 1"
  notify: reboot

- name: Validate timezone variable
  stat: path=/usr/share/zoneinfo/{{ default_timezone }}
  register: timezone_path
  changed_when: false

- name: Explain timezone error
  fail: msg="{{ default_timezone }} is not a valid timezone. For a list of valid timezones, check https://php.net/manual/en/timezones.php"
  when: not timezone_path.stat.exists

- name: Get current timezone
  command: cat /etc/timezone
  register: current_timezone
  changed_when: false

- name: Set timezone
  command: timedatectl set-timezone {{ default_timezone }}
  when: current_timezone.stdout != default_timezone

- name: set to local
  lineinfile:
    dest=/etc/hosts
    line="127.0.1.1 {{ inventory_hostname }} {{ ansible_hostname }}"
    regexp="^127\.0\.1\.1.*$"
    state=present
  when: user != 'vagrant'

- name: set to ip
  lineinfile:
    dest=/etc/hosts
    line="{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} {{ inventory_hostname }} {{ ansible_hostname }}"
    regexp="^{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}.*$"
    state=present
  when: user != 'vagrant'